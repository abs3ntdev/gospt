# .goreleaser.yaml
aurs:
  -
    # The package name.
    #
    # Defaults to the Project Name with a -bin suffix.
    #
    # Note that since this integration does not create a PKGBUILD to build from
    # source, per Arch's guidelines.
    # That said, GoReleaser will enforce a `-bin` suffix if its not present.
    name: gospt-bin

    # Template of your app's description.
    # Default is empty.
    description: "Spotify TUI And CLI written in Go"

    # The maintainers of the package.
    # Defaults to empty.
    maintainers:
      - 'abs3nt <abs3nt@asdf.cafe>'

    # The contributors of the package.
    # Defaults to empty.
    contributors:
      - 'abs3nt <abs3nt@asdf.cafe>'

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "GPL"

    # The SSH private key that should be used to commit to the Git repository.
    # This can either be a path or the key contents.
    #
    # IMPORTANT: the key must not be password-protected.
    #
    # WARNING: do not expose your private key in the configuration file!
    private_key: '{{ .Env.AUR_KEY }}'

    # The AUR Git URL for this package.
    # Defaults to empty
    # Publish is skipped if empty.
    git_url: 'ssh://aur@aur.archlinux.org/gospt-bin.git'

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    #
    # If set to auto, the release will not be uploaded to the AUR repo
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1.
    #
    # Default is false.
    skip_upload: false

    # List of additional packages that the software provides the features of.
    #
    # Defaults to the project name.
    provides:
      - gospt

    # List of packages that conflict with, or cause problems with the package.
    #
    # Defaults to the project name.
    conflicts:
      - gospt

    # List of packages that are not needed for the software to function,
    # but provide additional features.
    #
    # Must be in the format `package: short description of the extra functionality`.
    #
    # Defaults to empty.
    optdepends:
      - 'spotifyd: for handling streaming'

    # Custom package instructions.
    #
    # Defaults to `install -Dm755 "./PROJECT_NAME" "${pkgdir}/usr/bin/PROJECT_NAME",
    # which is not always correct.
    #
    # We recommend you override this, installing the binary, license and
    # everything else your package needs.
    package: |-
      # bin
      install -Dm755 "./gospt" "${pkgdir}/usr/bin/gospt"

      # license
      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/gospt/LICENSE"

      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/gospt.bash" "${pkgdir}/usr/share/bash-completion/completions/gospt"
      install -Dm644 "./completions/gospt.zsh" "${pkgdir}/usr/share/zsh/site-functions/_gospt"
      install -Dm644 "./completions/gospt.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/gospt.fish"

    # Git author used to commit to the repository.
    # Defaults are shown below.
    commit_author:
      name: abs3nt
      email: abs3nt@asdf.cafe

    # Commit message template.
    # Defaults to `Update to {{ .Tag }}`.
    commit_msg_template: "pkgbuild updates"

    # If you build for multiple GOAMD64 versions, you may use this to choose which one to use.
    # Defaults to `v1`.
    goamd64: v2

    # The value to be passed to `GIT_SSH_COMMAND`.
    # This is mainly used to specify the SSH private key used to pull/push to
    # the Git URL.
    #
    # Defaults to `ssh -i {{ .KeyPath }} -o StrictHostKeyChecking=accept-new -F /dev/null`.
    git_ssh_command: 'ssh -i {{ .Env.KEY }} -o SomeOption=yes'

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ignore:
      - goos: windows
        goarch: "386"

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
    - goos: windows
      format: zip
    files:
      - completions/*
    rlcp: true
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  groups:
  - title: Added
    regexp: '^.*?ADD(\([[:word:]]+\))??!?:.+$'
    order: 0
  - title: 'Bug fixes'
    regexp: '^.*?BUG(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: 'Enhancements'
    regexp: '^.*?IMPROVED(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: 'Docs'
    regexp: '^.*?DOC(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: 'CI'
    regexp: '^.*?CI(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: Others
    order: 999

